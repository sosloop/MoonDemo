// <auto-generated>
//     Generated by the moonfly tool.  DO NOT EDIT!
// </auto-generated>
using ProtoBuf;
using NetMessage;
using System;
using System.Collections.Generic;
public static class CmdCode
{
    public static Dictionary<ushort, Type> OpCodeType = new Dictionary<ushort, Type>()
    {
        {CmdCode.C2SLogin,typeof(C2SLogin)},
        {CmdCode.S2CLogin,typeof(S2CLogin)},
        {CmdCode.C2SMatch,typeof(C2SMatch)},
        {CmdCode.C2SEnterRoom,typeof(C2SEnterRoom)},
        {CmdCode.C2SMove,typeof(C2SMove)},
        {CmdCode.S2CMatch,typeof(S2CMatch)},
        {CmdCode.S2CMatchSuccess,typeof(S2CMatchSuccess)},
        {CmdCode.S2CEnterRoom,typeof(S2CEnterRoom)},
        {CmdCode.S2CMove,typeof(S2CMove)},
        {CmdCode.S2CEnterView,typeof(S2CEnterView)},
        {CmdCode.S2CLeaveView,typeof(S2CLeaveView)},
        {CmdCode.S2CUpdateRadius,typeof(S2CUpdateRadius)},
        {CmdCode.S2CDead,typeof(S2CDead)},
        {CmdCode.S2CErrorCode,typeof(S2CErrorCode)},
        {CmdCode.S2CGameOver,typeof(S2CGameOver)},
        {CmdCode.C2SItemList,typeof(C2SItemList)},
        {CmdCode.S2CItemList,typeof(S2CItemList)},
        {CmdCode.C2SUseItem,typeof(C2SUseItem)},
        {CmdCode.S2CUpdateItem,typeof(S2CUpdateItem)},
        {CmdCode.C2SHello,typeof(C2SHello)},
        {CmdCode.S2CWorld,typeof(S2CWorld)},
        {CmdCode.C2SMailList,typeof(C2SMailList)},
        {CmdCode.S2CMailList,typeof(S2CMailList)},
        {CmdCode.S2CUpdateMail,typeof(S2CUpdateMail)},
        {CmdCode.C2SMailRead,typeof(C2SMailRead)},
        {CmdCode.C2SMailLock,typeof(C2SMailLock)},
        {CmdCode.C2SMailReward,typeof(C2SMailReward)},
        {CmdCode.C2SMailMark,typeof(C2SMailMark)},
        {CmdCode.C2SMailDel,typeof(C2SMailDel)},
        {CmdCode.S2CMailDel,typeof(S2CMailDel)},
        {CmdCode.C2SPing,typeof(C2SPing)},
        {CmdCode.S2CPing,typeof(S2CPing)},
        {CmdCode.C2SDaily,typeof(C2SDaily)},
        {CmdCode.S2CDaily,typeof(S2CDaily)},
        {CmdCode.C2STurntable,typeof(C2STurntable)},
        {CmdCode.S2CTurntable,typeof(S2CTurntable)},

    };

    public static Dictionary<Type, ushort> TypeOpCode = new Dictionary<Type, ushort>()
    {
        {typeof(C2SLogin),CmdCode.C2SLogin},
        {typeof(S2CLogin),CmdCode.S2CLogin},
        {typeof(C2SMatch),CmdCode.C2SMatch},
        {typeof(C2SEnterRoom),CmdCode.C2SEnterRoom},
        {typeof(C2SMove),CmdCode.C2SMove},
        {typeof(S2CMatch),CmdCode.S2CMatch},
        {typeof(S2CMatchSuccess),CmdCode.S2CMatchSuccess},
        {typeof(S2CEnterRoom),CmdCode.S2CEnterRoom},
        {typeof(S2CMove),CmdCode.S2CMove},
        {typeof(S2CEnterView),CmdCode.S2CEnterView},
        {typeof(S2CLeaveView),CmdCode.S2CLeaveView},
        {typeof(S2CUpdateRadius),CmdCode.S2CUpdateRadius},
        {typeof(S2CDead),CmdCode.S2CDead},
        {typeof(S2CErrorCode),CmdCode.S2CErrorCode},
        {typeof(S2CGameOver),CmdCode.S2CGameOver},
        {typeof(C2SItemList),CmdCode.C2SItemList},
        {typeof(S2CItemList),CmdCode.S2CItemList},
        {typeof(C2SUseItem),CmdCode.C2SUseItem},
        {typeof(S2CUpdateItem),CmdCode.S2CUpdateItem},
        {typeof(C2SHello),CmdCode.C2SHello},
        {typeof(S2CWorld),CmdCode.S2CWorld},
        {typeof(C2SMailList),CmdCode.C2SMailList},
        {typeof(S2CMailList),CmdCode.S2CMailList},
        {typeof(S2CUpdateMail),CmdCode.S2CUpdateMail},
        {typeof(C2SMailRead),CmdCode.C2SMailRead},
        {typeof(C2SMailLock),CmdCode.C2SMailLock},
        {typeof(C2SMailReward),CmdCode.C2SMailReward},
        {typeof(C2SMailMark),CmdCode.C2SMailMark},
        {typeof(C2SMailDel),CmdCode.C2SMailDel},
        {typeof(S2CMailDel),CmdCode.S2CMailDel},
        {typeof(C2SPing),CmdCode.C2SPing},
        {typeof(S2CPing),CmdCode.S2CPing},
        {typeof(C2SDaily),CmdCode.C2SDaily},
        {typeof(S2CDaily),CmdCode.S2CDaily},
        {typeof(C2STurntable),CmdCode.C2STurntable},
        {typeof(S2CTurntable),CmdCode.S2CTurntable},

    };

    public const ushort C2SLogin = 1;
    public const ushort S2CLogin = 2;
    public const ushort C2SMatch = 3;
    public const ushort C2SEnterRoom = 4;
    public const ushort C2SMove = 5;
    public const ushort S2CMatch = 6;
    public const ushort S2CMatchSuccess = 7;
    public const ushort S2CEnterRoom = 8;
    public const ushort S2CMove = 9;
    public const ushort S2CEnterView = 10;
    public const ushort S2CLeaveView = 11;
    public const ushort S2CUpdateRadius = 12;
    public const ushort S2CDead = 13;
    public const ushort S2CErrorCode = 14;
    public const ushort S2CGameOver = 15;
    public const ushort C2SItemList = 16;
    public const ushort S2CItemList = 17;
    public const ushort C2SUseItem = 18;
    public const ushort S2CUpdateItem = 19;
    public const ushort C2SHello = 20;
    public const ushort S2CWorld = 21;
    public const ushort C2SMailList = 22;
    public const ushort S2CMailList = 23;
    public const ushort S2CUpdateMail = 24;
    public const ushort C2SMailRead = 25;
    public const ushort C2SMailLock = 26;
    public const ushort C2SMailReward = 27;
    public const ushort C2SMailMark = 28;
    public const ushort C2SMailDel = 29;
    public const ushort S2CMailDel = 30;
    public const ushort C2SPing = 31;
    public const ushort S2CPing = 32;
    public const ushort C2SDaily = 33;
    public const ushort S2CDaily = 34;
    public const ushort C2STurntable = 35;
    public const ushort S2CTurntable = 36;

}

/// <summary>
/// 表示通用消息接口。
/// </summary>
public interface IMessage
{
    ushort OpCode();
}

/// <summary>
/// 提供 ProtoBuff 序列化和反序列化支持的接口。
/// </summary>
public interface IProto
{
    
}

/// <summary>
/// 提供 ProtoBuff 序列化和反序列化支持的抽象基类。
/// </summary>
[ProtoContract]
public abstract class AProto : IProto
{
    /// <summary>
    /// 在反序列化完成后执行的操作，可以在子类中重写以完成初始化。
    /// </summary>
    public virtual void AfterDeserialization() => EndInit();
    /// <summary>
    /// 在 <see cref="AfterDeserialization"/> 中调用，用于完成子类的初始化操作。
    /// </summary>
    protected virtual void EndInit() { }
}
