
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg
{
public sealed partial class CfgItem : Luban.BeanBase
{
    public CfgItem(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        Price = _buf.ReadInt();
        UpgradeToItemId = _buf.ReadInt();
        UpgradeToItemId_Ref = null;
        if(_buf.ReadBool()){ ExpireTime = _buf.ReadLong(); } else { ExpireTime = null; }
        BatchUseable = _buf.ReadBool();
        Quality = (item.EQuality)_buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ExchangeList = new System.Collections.Generic.List<item.ItemExchange>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { item.ItemExchange _e0;  _e0 = item.ItemExchange.DeserializeItemExchange(_buf); ExchangeList.Add(_e0);}}
    }

    public static CfgItem DeserializeCfgItem(ByteBuf _buf)
    {
        return new CfgItem(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 名字
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 描述
    /// </summary>
    public readonly string Desc;
    /// <summary>
    /// 价格
    /// </summary>
    public readonly int Price;
    /// <summary>
    /// 引用当前表
    /// </summary>
    public readonly int UpgradeToItemId;
    public CfgItem UpgradeToItemId_Ref;
    /// <summary>
    /// 过期时间
    /// </summary>
    public readonly long? ExpireTime;
    /// <summary>
    /// 能否批量使用
    /// </summary>
    public readonly bool BatchUseable;
    /// <summary>
    /// 品质
    /// </summary>
    public readonly item.EQuality Quality;
    public readonly System.Collections.Generic.List<item.ItemExchange> ExchangeList;
   
    public const int __ID__ = -1944177289;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        UpgradeToItemId_Ref = tables.TbItem.GetOrDefault(UpgradeToItemId);
        
        
        
        foreach (var _e in ExchangeList) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "desc:" + Desc + ","
        + "price:" + Price + ","
        + "upgradeToItemId:" + UpgradeToItemId + ","
        + "expireTime:" + ExpireTime + ","
        + "batchUseable:" + BatchUseable + ","
        + "quality:" + Quality + ","
        + "exchangeList:" + Luban.StringUtil.CollectionToString(ExchangeList) + ","
        + "}";
    }
}

}
